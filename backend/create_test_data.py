# #!/usr/bin/env python3
# """
# Script pour cr√©er des donn√©es de test dans la base de donn√©es
# """
# from database import SessionLocal
# import models

# def create_test_jobs():
#     """Cr√©e des jobs de test"""
#     db = SessionLocal()
    
#     try:
#         # V√©rifier si des jobs existent d√©j√†
#         existing_jobs = db.query(models.Job).count()
#         if existing_jobs > 0:
#             print(f"‚úÖ {existing_jobs} jobs d√©j√† pr√©sents dans la base")
#             return
        
#         jobs_data = [
#             {
#                 "code": "dev-web",
#                 "title": "D√©veloppeur Web",
#                 "description": "Cr√©ez des applications web innovantes avec les derni√®res technologies",
#                 "type": models.JobType.CDI,
#                 "salary": "35k - 50k ‚Ç¨"
#             },
#             {
#                 "code": "data-analyst",
#                 "title": "Analyste de Donn√©es",
#                 "description": "Analysez et interpr√©tez les donn√©es pour aider √† la prise de d√©cision",
#                 "type": models.JobType.CDI,
#                 "salary": "40k - 55k ‚Ç¨"
#             },
#             {
#                 "code": "ux-designer",
#                 "title": "UX Designer",
#                 "description": "Concevez des exp√©riences utilisateur exceptionnelles",
#                 "type": models.JobType.CDI,
#                 "salary": "38k - 52k ‚Ç¨"
#             },
#             {
#                 "code": "ingenieur-reseau",
#                 "title": "Ing√©nieur R√©seau",
#                 "description": "G√©rez et optimisez l'infrastructure r√©seau de l'entreprise",
#                 "type": models.JobType.CDI,
#                 "salary": "42k - 58k ‚Ç¨"
#             },
#             {
#                 "code": "stage-cloud",
#                 "title": "Stage Cloud Computing",
#                 "description": "D√©couvrez les technologies cloud et DevOps",
#                 "type": models.JobType.STAGE,
#                 "salary": "800‚Ç¨ - 1200‚Ç¨/mois"
#             },
#             {
#                 "code": "stage-dev",
#                 "title": "Stage D√©veloppement",
#                 "description": "Apprenez le d√©veloppement logiciel avec une √©quipe exp√©riment√©e",
#                 "type": models.JobType.STAGE,
#                 "salary": "700‚Ç¨ - 1000‚Ç¨/mois"
#             }
#         ]
        
#         for job_data in jobs_data:
#             job = models.Job(**job_data)
#             db.add(job)
#             print(f"‚ûï Ajout du job: {job_data['title']}")
        
#         db.commit()
#         print(f"‚úÖ {len(jobs_data)} jobs cr√©√©s avec succ√®s!")
        
#     except Exception as e:
#         print(f"‚ùå Erreur lors de la cr√©ation des jobs: {e}")
#         db.rollback()
#     finally:
#         db.close()

# if __name__ == "__main__":
#     print("üîß Cr√©ation des donn√©es de test...")
#     create_test_jobs()
#     print("üéâ Termin√©!")